name: Test

on:
  # schedule:
    # - cron: "35 16 * * 2"

  # - push
  # - pull_request
  push:
    paths-ignore:
      - "/*.sh"
      - "/.*"
      - "/_*"
      - "**.txt"
      - "**.adoc"
      - "**.md"
      - ".github/workflows/*.yml"
      - "!.github/workflows/test.yml"
  pull_request:
    paths-ignore:
      - "/*.sh"
      - "/.*"
      - "/_*"
      - "**.txt"
      - "**.adoc"
      - "**.md"

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        package_manager: [npm]
        package_root: ["./test/app-in-root/", "./test/app-in-subdirectory/", "./test/vuevite-app"]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json')}}

      - name: Install test app dependencies
        run: |
          cd ${{ matrix.package_root }}
          ${{ matrix.package_manager }} install

      - name: apt-update
        if: startsWith(matrix.os, 'ubuntu-latest')
        run: sudo apt-get update

      - name: autoremove
        if: startsWith(matrix.os, 'ubuntu-latest')
        run: sudo apt autoremove

      - name: Install libarchive rpm on Linux
        if: startsWith(matrix.os, 'ubuntu-latest')
        run: sudo apt-get install libarchive-tools rpm

      - name: Install dmg-license fo MacOS
        if: startsWith(matrix.os, 'macos-latest')
        run: ${{ matrix.package_manager }} install dmg-license

      - name: Run action
        uses: ./
        with:
          package_manager: ${{ matrix.package_manager }}
          github_token: ${{ secrets.github_token }}
          package_root: ${{ matrix.package_root }}
          use_vue_cli: ${{ contains(matrix.package_root, 'vuevite')}}
          max_attempts: 3

      - name: see directory
        if: startsWith(matrix.os, 'windows-latest') == false
        run: ls ./dist

      - name: see directory
        if: startsWith(matrix.os, 'windows-latest')
        run: dir dist
